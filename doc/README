=Introduction=
WebIOPi is a REST framework and a webapp which allows you to control your Raspberry Pi's GPIO.
Just install it on your Pi, and use any browser from your network.
It's useful to start enjoying GPIOs and also to debug some circuits without writing any line of code.
It also allows to control your Pi's GPIOs over Internet, so it's a good starting point for home remote control.

You can also [CUSTOMIZE create your own web interface] using the included [JAVASCRIPT Javascript library], or the [RESTAPI REST API].
You can even use the WebIOPi power inside your own Python script using the [PYTHON Server Library].

WebIOPI is developed by Eric PTAK, also known as trouch, french R&D engineer in networks, software, mobility and Internet of Things. 

   [CHANGELOG Changelog]
   [http://groups.google.com/group/webiopi Support & Discussion]
   [http://trouch.com Eric's blog]
   [http://www.youtube.com/watch?v=wGahWkjettw Video tutorial] by RaspberryPiBeginners

=Features=
   HTML/Javascript client and Python server
   Supports binary GPIOs, in both input and output.
   Software PWM
   Smartphone compatible
   Auto-refresh

   Login/Password protection
   [CUSTOMIZE Easily customize UI]
   [RESTAPI REST API]
   [PYTHON Python Server Library]
   [JAVASCRIPT Javascript Client Library]

=Install=
You will need Python development headers. On Raspbian, open a terminal.
If you plan to use Python 2.X :
$ sudo aptitude install python-dev
or/and if you plan to use Python 3.X
$ sudo aptitude install python3-dev


Now download, then extract and install WebIOPi :
$ wget http://webiopi.googlecode.com/files/WebIOPi-0.5.1.tar.gz
$ tar xvzf WebIOPi-0.5.1.tar.gz
$ cd WebIOPi-0.5.1
$ sudo ./setup.sh


Finally, run Python using webiopi module :
$ sudo python -m webiopi [port]
where port is the port to bind the HTTP server, default is 8000.

You're done, and ready to enjoy WebIOPi ! But the server and GPIO state will be lost when you'll stop the script (CTRL-C) or close the terminal session.

You can also start/stop the background service :
$ sudo /etc/init.d/webiopi start
and
$ sudo /etc/init.d/webiopi stop

You can even setup your system to start webiopi at startup :
$ sudo update-rc.d webiopi defaults


=Usage=
If your are directly using your Raspberry Pi with keyboard/mouse/display plugged,  open a browser to http://localhost:8000/webiopi/

If your Raspberry Pi is connected to your network, you can open a browser to http://raspberrypi:8000/webiopi/ with any device of your network. Replace raspberrypi by its IP.

You can even add a port redirection on your router (and/or use IPv6) to control your GPIOs over Internet !

Default user is "webiopi" and password is "raspberry"

   Click/Tap the OUT/IN button to change GPIO direction.
   Click/Tap pins to change the GPIO output state.


http://trouch.com/wp-content/uploads/2012/08/webiopi-chrome.png

You can also use the expert app, which gives you an ordered list of GPIOs. It's located at http://localhost:8000/webiopi/app/expert/ (or http://raspberrypi:8000/webiopi/app/expert/)

http://trouch.com/wp-content/uploads/2012/08/webiopi-chrome-expert.png

You can also create you own server script, to fully customize the behavior, add computing... Check the [CUSTOMIZE customization page] for more informations.

http://trouch.com/wp-content/uploads/2012/11/webiopi-architecture.png

<p></p>
<p align="center"><a href="https://www.paypal.com/cgi-bin/webscr?cmd=s-xclick&hostedbuttonid=79EM7ZV9FQ4HU">https://www.paypal.com/enUS/i/btn/btndonateCCLG.gif</a></p>