The Web API included in the servers scripts allows you to make you own client, using an HTTP REST based API. You can you use it to achieve several tasks :
<wiki:toc max_depth="3" />

Errors returned by the WebAPI are understandable when the HTTP call is not valid :
  * 400 Bad Request (path incomplete)
  * 403 GPIO # Not Available
  * 403 GPIO # Disabled
  * 404 `[something]` Not Found


=Get GPIO direction=
  * HTTP GET /GPIO/(pinNumber)/direction
    * Returns "in" or "out"
  * Example :
    * To get GPIO 0 direction : HTTP GET /GPIO/0/direction

=Set GPIO direction=
  * HTTP POST /GPIO/(pinNumber)/direction/("in" or "out")
    * Returns new setup : "in" or "out"
  * Examples:
    * To set GPIO 0 in input : HTTP POST /GPIO/0/direction/in
    * To set GPIO 1 in output : HTTP POST /GPIO/1/direction/out

=Get GPIO value=
  * HTTP GET /GPIO/(pinNumber)/value
    * Returns 0 or 1
  * Example :
    * To get GPIO 0 value : HTTP GET /GPIO/0/value

=Set GPIO value=
  * HTTP POST /GPIO/(pinNumber)/value/(0 or 1)
    * Return new value : 0 or 1
  * Examples:
    * To raise GPIO 0 : HTTP POST /GPIO/0/value/1
    * To fall GPIO 1 : HTTP POST /GPIO/1/value/0

=Get full GPIO state/configuration=
  * HTTP GET /`*`
    * Returns full GPIO state in JSON :
{"UART": 1, "I2C": 0, "SPI": 0, "GPIO":{
"0": {"mode": "GPIO", "direction": "in", "value": 1}, 
"1": {"mode": "GPIO", "direction": "in", "value": 1}, 
"4": {"mode": "GPIO", "direction": "out", "value": 1}, 
"7": {"mode": "GPIO", "direction": "out", "value": 0}, 
"8": {"mode": "GPIO", "direction": "out", "value": 0}, 
"9": {"mode": "GPIO", "direction": "out", "value": 0}, 
"10": {"mode": "GPIO", "direction": "out", "value": 0}, 
"11": {"mode": "GPIO", "direction": "out", "value": 0}, 
"14": {"mode": "ALT", "direction": "out", "value": 0}, 
"15": {"mode": "ALT", "direction": "out", "value": 0}, 
"17": {"mode": "GPIO", "direction": "out", "value": 0}, 
"18": {"mode": "GPIO", "direction": "out", "value": 0}, 
"21": {"mode": "GPIO", "direction": "out", "value": 0}, 
"22": {"mode": "GPIO", "direction": "out", "value": 0}, 
"23": {"mode": "GPIO", "direction": "out", "value": 0}, 
"24": {"mode": "GPIO", "direction": "out", "value": 0}, 
"25": {"mode": "GPIO", "direction": "out", "value": 0}
}}
"UART": 1, "I2C": 0, "SPI": 0 mean that UART is enabled, whereas both I2C and SPI are disabled. So GPIOs used by the UART (14 and 15) are disabled and unusable.

  

------------------------------------------------------------------------------

   Copyright 2012 Eric Ptak - trouch.com

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

